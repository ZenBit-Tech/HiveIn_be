name: CI

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches:
      - master
      - develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
#2
env:
  REGISTRY: 'registry.digitalocean.com/zenbit'
  IMAGE_NAME: 'get-job-zenbit'
#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          envkey_MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          envkey_MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          envkey_MYSQL_DB_NAME: ${{ secrets.MYSQL_DB_NAME }}
          envkey_API_PORT: ${{ secrets.API_PORT }}
          envkey_MYSQL_USER: ${{ secrets.MYSQL_USER }}
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_OAUTH_GOOGLE_ID: ${{ secrets.OAUTH_GOOGLE_ID }}
          envkey_OAUTH_GOOGLE_SECRET_KEY: ${{ secrets.OAUTH_GOOGLE_SECRET_KEY }}
          envkey_OAUTH_GOOGLE_REDIRECT_URL: ${{ secrets.OAUTH_GOOGLE_REDIRECT_URL }}
          envkey_FRONTEND_SIGN_UP_REDIRECT_URL: ${{ secrets.FRONTEND_SIGN_UP_REDIRECT_URL }}
          envkey_FRONTEND_SIGN_IN_REDIRECT_URL: ${{ secrets.FRONTEND_SIGN_IN_REDIRECT_URL }}
          envkey_FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          envkey_DNS_URL: ${{ secrets.DNS_URL }}
          envkey_SEND_GRID_KEY: ${{ secrets.SEND_GRID_KEY }}
          envkey_UPLOADED_FILES_DESTINATION: ${{ secrets.UPLOADED_FILES_DESTINATION }}
          envkey_AWS_REGION: ${{ secrets.AWS_REGION }}
          envkey_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          envkey_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          envkey_AWS_PUBLIC_BUCKET_NAME: ${{ secrets.AWS_PUBLIC_BUCKET_NAME }}
          envkey_REDIS_HOST: ${{ secrets.REDIS_HOST }}
          envkey_REDIS_PORT: ${{ secrets.REDIS_PORT }}
          envkey_REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}
          envkey_PASSWORD: ${{ secrets.PASSWORD }}
          file_name: .env
          fail_on_empty: false

      - name: Check .env file
        run: |
          cat .env

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            docker run -d -p4000:4000 \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
